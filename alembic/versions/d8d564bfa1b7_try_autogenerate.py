"""try autogenerate

Revision ID: d8d564bfa1b7
Revises: 
Create Date: 2022-08-03 04:33:31.130309

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd8d564bfa1b7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_record_card_id', table_name='record')
    op.drop_index('ix_record_front_end_id', table_name='record')
    op.drop_index('ix_record_id', table_name='record')
    op.drop_index('ix_record_user_id', table_name='record')
    op.drop_table('record')

    op.drop_index('ix_userstats_deck_id', table_name='userstats')
    op.drop_index('ix_userstats_id', table_name='userstats')
    op.drop_index('ix_userstats_user_id', table_name='userstats')
    op.drop_table('userstats')

    op.drop_index('ix_currcardfeaturevector_card_id', table_name='cardfeaturevector')
    op.drop_index('ix_curruserfeaturevector_user_id', table_name='userfeaturevector')
    op.drop_index('ix_currusercardfeaturevector_card_id', table_name='usercardfeaturevector')
    op.drop_index('ix_currusercardfeaturevector_user_id', table_name='usercardfeaturevector')
    op.create_index(op.f('ix_cardfeaturevector_card_id'), 'cardfeaturevector', ['card_id'], unique=False)
    op.create_index(op.f('ix_userfeaturevector_user_id'), 'userfeaturevector', ['user_id'], unique=False)
    op.create_index(op.f('ix_usercardfeaturevector_card_id'), 'usercardfeaturevector', ['card_id'], unique=False)
    op.create_index(op.f('ix_usercardfeaturevector_user_id'), 'usercardfeaturevector', ['user_id'], unique=False)

    op.drop_constraint('usersnapshot_id_fkey', 'usersnapshot', type_='foreignkey')
    op.create_foreign_key(None, 'usersnapshot', 'schedulerequest', ['id'], ['id'], ondelete='CASCADE')
    op.alter_column('schedulerequest', 'card_ids', existing_type=postgresql.ARRAY(sa.VARCHAR()), nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'usersnapshot', type_='foreignkey')
    op.create_foreign_key('usersnapshot_id_fkey', 'usersnapshot', 'schedulerequest', ['id'], ['id'])
    op.drop_index(op.f('ix_userfeaturevector_user_id'), table_name='userfeaturevector')
    op.create_index('ix_curruserfeaturevector_user_id', 'userfeaturevector', ['user_id'], unique=False)
    op.drop_index(op.f('ix_usercardfeaturevector_user_id'), table_name='usercardfeaturevector')
    op.drop_index(op.f('ix_usercardfeaturevector_card_id'), table_name='usercardfeaturevector')
    op.create_index('ix_currusercardfeaturevector_user_id', 'usercardfeaturevector', ['user_id'], unique=False)
    op.create_index('ix_currusercardfeaturevector_card_id', 'usercardfeaturevector', ['card_id'], unique=False)
    op.alter_column('schedulerequest', 'card_ids',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               nullable=True)
    op.drop_constraint(None, 'cardsnapshot', type_='foreignkey')
    op.create_foreign_key('cardsnapshot_id_fkey', 'cardsnapshot', 'schedulerequest', ['id'], ['id'])
    op.drop_index(op.f('ix_cardfeaturevector_card_id'), table_name='cardfeaturevector')
    op.create_index('ix_currcardfeaturevector_card_id', 'cardfeaturevector', ['card_id'], unique=False)
    op.create_table('userstats',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('deck_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('n_cards_total', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('n_cards_positive', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('n_new_cards_total', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('n_old_cards_total', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('n_new_cards_positive', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('n_old_cards_positive', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('elapsed_milliseconds_text', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('elapsed_milliseconds_answer', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('n_days_studied', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='userstats_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='userstats_pkey')
    )
    op.create_index('ix_userstats_user_id', 'userstats', ['user_id'], unique=False)
    op.create_index('ix_userstats_id', 'userstats', ['id'], unique=False)
    op.create_index('ix_userstats_deck_id', 'userstats', ['deck_id'], unique=False)
    op.create_table('record',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('card_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('front_end_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('deck_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('response', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('elapsed_milliseconds_text', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('elapsed_milliseconds_answer', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_new_fact', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['card_id'], ['card.id'], name='record_card_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='record_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='record_pkey')
    )
    op.create_index('ix_record_user_id', 'record', ['user_id'], unique=False)
    op.create_index('ix_record_id', 'record', ['id'], unique=False)
    op.create_index('ix_record_front_end_id', 'record', ['front_end_id'], unique=False)
    op.create_index('ix_record_card_id', 'record', ['card_id'], unique=False)
    # ### end Alembic commands ###
